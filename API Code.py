"""Movie TMDB.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XdIY2zDvxKCcc2tsisA1fn-f1QoNnJ55

# Step 1: Import Library to Make Requests
"""

import requests
from bs4 import BeautifulSoup
from pprint import pprint

"""# Step 2: Get TMDB Authorization Token

https://www.themoviedb.org/settings/api


"""

token_string = "BQBNE7B0ZgdlXR-WUCEBWDCrqlAw1uZogSPps_KmWoCa404ROqg43Djdiiz1n7GMxoqSf5xjake8SU-53rGK_8xDQHvDDiZbdMwYMJMk1iqqZpOKbHJXYadVvONINdWpN1GitOMKCbTbj0hKS3r4m8W7gnedybqkZuRiwnbQ1yc"
token = "Bearer " + token_string
token

"""# Get Movie Details of Popular Movies




"""

base_url = 'https://api.themoviedb.org/3/movie/popular?api_key=e93793ba5e52b020648e1f1544b82e55&language=en-US'
headers = {'Authorization': token, 'User-Agent': 'TMDB App'}
response = requests.get(base_url, headers=headers)
popular = response.json()

pprint(popular)

"""###Get title, id, and overview for movies"""

# Getting one movide id
popular['results'][0]['id']

"""###We can use for loop to get every movies title, id, and overview 


"""

# Get the list of movies from the results field
movies = popular["results"]

# Create an empty list to store the movie information
movie_info = []

# Iterate over the list of movies
for movie in movies:
    # Get the id, title, and overview of the current movie
    movie_title = movie["title"]
    movie_id = movie["id"]
    movie_overview = movie["overview"]
    vote_average = movie['vote_average']

    # Create a dictionary with the id, title, and overview of the current movie
    current_movie = {
        "title": movie_title,
        "id": movie_id,
        "overview": movie_overview,
        "vote_average": vote_average
    }

    # Add the movie information to the list of movie info
    movie_info.append(current_movie)

# Print the list of movie info
print(movie_info)

"""###Lets "pretty-print‚Äù this Python data structure into a more digestiable form"""

pprint(movie_info)

import pandas as pd

movie_df = pd.DataFrame(movie_info)
movie_df.columns = ["title", "id", "overview", 'vote_average']
movie_df

"""###Get movie trailers based off of movie ids"""

movie_id = input("Please input the id of the movie you are interested in")
print(f"You chose the id {movie_id}")

base_url = f"https://api.themoviedb.org/3/movie/{movie_id}/videos?api_key=e93793ba5e52b020648e1f1544b82e55&language=en-US&page=1"
headers = {'Authorization': token, 'User-Agent': 'TMDB App'}
response = requests.get(base_url, headers=headers)
trailers = response.json()

"""###Here is a list of Trailers for the movie of your choosing





"""

pprint(trailers)

"""###Here you will find the first trailer to the movie of your chossing"""

pprint(trailers['results'][0])

key = trailers['results'][0]['key']
print(key)

key

print(f"Use this link to access the youtube trailer https://www.youtube.com/watch?v={key}")

"""###Where can I stream the movie?"""

base_url = f'https://api.themoviedb.org/3/movie/{movie_id}/watch/providers?api_key=e93793ba5e52b020648e1f1544b82e55&language=en-US&page=1'
headers = {'Authorization': token, 'User-Agent': 'TMDB App'}
response = requests.get(base_url, headers=headers)
providers = response.json()

pprint(providers)

"""###Based off of the id get a list of other movie recommendations"""

base_url = f'https://api.themoviedb.org/3/movie/{movie_id}/recommendations?api_key=e93793ba5e52b020648e1f1544b82e55&language=en-US&page=1'
headers = {'Authorization': token, 'User-Agent': 'TMDB App'}
response = requests.get(base_url, headers=headers)
recom = response.json()

pprint(recom)

# Get the list of movies from the results field
movies = recom["results"]

# Create an empty list to store the movie information
recommen = []

# Iterate over the list of movies
for movie in movies:
    # Get the id, title, and overview of the current movie
    movie_title = movie["title"]
    movie_id = movie["id"]
    movie_overview = movie["overview"]
    vote_average = movie['vote_average']

    # Create a dictionary with the id, title, and overview of the current movie
    current_movie = {
        "title": movie_title,
        "id": movie_id,
        "overview": movie_overview,
        "vote_average": vote_average
    }

    # Add the movie information to the list of movie info
    recommen.append(current_movie)

# Print the list of movie info
print(recommen)

import pandas as pd

movie_df = pd.DataFrame(recommen)
movie_df.columns = ["title", "id", "overview", "vote_average"]
movie_df

"""###Similar Movies"""

base_url = f'https://api.themoviedb.org/3/movie/{movie_id}/similar?api_key=e93793ba5e52b020648e1f1544b82e55&language=en-US&page=1'
headers = {'Authorization': token, 'User-Agent': 'TMDB App'}
response = requests.get(base_url, headers=headers)
similar = response.json()

pprint(similar)

# Get the list of movies from the results field
movies = similar["results"]

# Create an empty list to store the movie information
sim = []

# Iterate over the list of movies
for movie in movies:
    # Get the id, title, and overview of the current movie
    movie_title = movie["title"]
    movie_id = movie["id"]
    movie_overview = movie["overview"]
    vote_average = movie['vote_average']

    # Create a dictionary with the id, title, and overview of the current movie
    current_movie = {
        "title": movie_title,
        "id": movie_id,
        "overview": movie_overview,
        "vote_average": vote_average
    }

    # Add the movie information to the list of movie info
    sim.append(current_movie)

# Print the list of movie info
print(sim)

import pandas as pd

movie_df = pd.DataFrame(sim)
movie_df.columns = ["title", "id", "overview", "vote_average"]
movie_df